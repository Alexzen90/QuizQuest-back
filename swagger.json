{
  "swaggerDefinition": {
    "openapi": "3.0.0",
    "info": {
      "title": "QuizQuest - back",
      "version": "1.0.0",
      "description": "API documentation"
    },
    "servers": [
      {
        "url": "http://localhost:3001",
        "description": "Development server"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "User": {
          "type": "object",
          "required": [
            "username",
            "email",
            "password"
          ],
          "properties": {
            "username": {
              "type": "string",
              "description": "The user's username",
              "example": "johndoe"
            },
            "email": {
              "type": "string",
              "description": "The user's email",
              "example": "johndoe@example.com"
            },
            "password": {
              "type": "string",
              "description": "The user's password",
              "example": "secret"
            },
            "name": {
              "type": "string",
              "description": "The user's name",
              "example": "John Doe"
            },
            "token": {
              "type": "string",
              "description": "An optional token for the user",
              "example": "somerandomtoken"
            },
            "created_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the user was created",
              "example" :"2024-01-01T00:00:00Z"
            },
            "updated_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the user was modified",
              "example" :"2024-01-01T00:00:00Z"
            }
          }
        },
        "Quiz": {
          "type": "object",
          "required": [
            "name",
            "categorie_id",
            "user_id"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The quiz's name",
              "example": "Quiz sur les vacances"
            },
            "categorie_id": {
              "type": "string",
              "description": "The id of the category associated with the quiz",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "user_id": {
              "type": "string",
              "description": "The id of the user that created the quiz",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "created_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the quiz was created",
              "example" :"2024-01-01T00:00:00Z"
            },
            "updated_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the quiz was modified",
              "example" :"2024-01-01T00:00:00Z"
            }
          }
        },
        "Login": {
          "type": "object",
          "required": ["username", "password"],
          "properties": {
            "username": {
              "type": "string",
              "description": "The user's username",
              "example": "johndoe"
            },
            "password": {
              "type": "string",
              "description": "The user's password",
              "example": "secret"
            }
          }
        },
        "Categorie": {
          "type": "object",
          "required": ["name", "user_id"],
          "properties": {
            "name": {
              "type": "string",
              "description": "The category's name",
              "example": "Vacances"
            },
            "user_id": {
              "type": "string",
              "description": "The id of the user that created the category",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "created_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the category was created",
              "example" :"2024-01-01T00:00:00Z"
            },
            "updated_at":{
              "type": "string",
              "format": "date-time",
              "description": "Date when the category was modified",
              "example" :"2024-01-01T00:00:00Z"
            }
          }
        },
        "Question": {
          "type": "object",
          "required": ["user_id", "categorie_id", "quiz_id", "question", "difficulty", "correct_answer", "incorrect_answers"],
          "properties": {
            "user_id": {
              "type": "string",
              "description": "The id of the user that created the question",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "quiz_id": {
              "type": "string",
              "description": "The id of the quiz associated with the question",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "categorie_id": {
              "type": "string",
              "description": "The id of the category associated with the question",
              "example": "66a75cbd8b18880971f52fe4"
            },
            "question": {
              "type": "string",
              "description": "The question",
              "example": "Quelle est la capitale de la France ?"
            },
            "difficulty": {
              "type": "string",
              "description": "The difficulty level of the question",
              "example": "easy"
            },
            "correct_answer": {
              "type": "string",
              "description": "The correct answer to the question",
              "example": "Paris"
            },
            "incorrect_answers": {
              "type": "array",
              "description": "The incorrect answers to the question",
              "example": ["Lyon", "Marseille", "Nantes"]
            }
          }
        }
      },
      "responses": {
        "NotFound": {
          "description": "Resource not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "no-found"
                  },
                  "message": {
                    "type": "string",
                    "example": "Resource not found"
                  }
                }
              }
            }
          }
        },
        "ValidationError": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "validator"
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation error"
                  }
                }
              }
            }
          }
        },
        "DuplicateError": {
          "description": "Duplicate entry",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "duplicate"
                  },
                  "message": {
                    "type": "string",
                    "example": "Duplicate entry"
                  }
                }
              }
            }
          }
        },
        "UnauthorizedError": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type_error": {
                    "type": "string",
                    "example": "unauthorized"
                  },
                  "message": {
                    "type": "string",
                    "example": "Unauthorized"
                  }
                }
              }
            }
          }
        }
      }
    },
    "tags": [
      {
        "name": "User",
        "description": "Operations about user"
      },
      {
        "name": "Quiz",
        "description": "Operations about Quiz"
      },
      {
        "name": "Categorie",
        "description": "Operations about Categorie"
      },
      {
        "name": "Question",
        "description": "Operations about Question"
      }
    ]
  },
  "apis": ["./SwaggerDocs/*.js"]
}
